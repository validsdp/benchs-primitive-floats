let box_remez_sqrt__1 x = [(1/2, 2)];;
let obj_remez_sqrt__1 x = [(sqrt(x) - (((((122 / 7397 * x + (-1733) / 13547) * x + 529 / 1274) * x + (-767) / 999) * x + 407 / 334) * x + 227 / 925) + 5/65536, 0)];;
let box_remez_sqrt__2 x = [(1/2, 2)];;
let obj_remez_sqrt__2 x = [(- (sqrt(x) - (((((122 / 7397 * x + (-1733) / 13547) * x + 529 / 1274) * x + (-767) / 999) * x + 407 / 334) * x + 227 / 925)) + 5/65536, 0)];;

let box_abs_err_atan__1 x = [(-1/30, 1/30)];;
let obj_abs_err_atan__1 x = [(atan(x) - (x - (11184811/33554432) * x**3 - (13421773/67108864) * x**5) + 5/268435456, 0)];;
let box_abs_err_atan__2 x = [(-1/30, 1/30)];;
let obj_abs_err_atan__2 x = [(- (atan(x) - (x - (11184811/33554432) * x**3 - (13421773/67108864) * x**5)) + 5/268435456, 0)];;

let box_rel_err_geodesic__1 phi = [(0, 715/512)];;
let obj_rel_err_geodesic__1 phi = [((6378137 / sqrt (1 + (1 - 1000000000 / 298257223563) ** 2 * (sin phi / cos phi) * (sin phi / cos phi)) - (4439091 / 4 + ((715 / 512) ** 2 - phi ** 2) * (9023647 / 4 + ((715 / 512) ** 2 - phi ** 2) * (13868737 / 64 + ((715 / 512) ** 2 - phi ** 2) * (13233647 / 2048 + ((715 / 512) ** 2 - phi ** 2) * (-1898597 / 16384 + ((715 / 512) ** 2 - phi ** 2) * (-6661427 / 131072))))))) / (6378137 / sqrt (1 + (1 - 1000000000 / 298257223563) ** 2 * (sin phi / cos phi) * (sin phi / cos phi))) + 23/16777216, 0)];;

let box_rel_err_geodesic__2 phi = [(0, 715/512)];;
let obj_rel_err_geodesic__2 phi = [(- ((6378137 / sqrt (1 + (1 - 1000000000 / 298257223563) ** 2 * (sin phi / cos phi) * (sin phi / cos phi)) - (4439091 / 4 + ((715 / 512) ** 2 - phi ** 2) * (9023647 / 4 + ((715 / 512) ** 2 - phi ** 2) * (13868737 / 64 + ((715 / 512) ** 2 - phi ** 2) * (13233647 / 2048 + ((715 / 512) ** 2 - phi ** 2) * (-1898597 / 16384 + ((715 / 512) ** 2 - phi ** 2) * (-6661427 / 131072))))))) / (6378137 / sqrt (1 + (1 - 1000000000 / 298257223563) ** 2 * (sin phi / cos phi) * (sin phi / cos phi)))) + 23/16777216, 0)];;

let box_cos_cos_d2__1 x = [(-1, 1/2)];;
let obj_cos_cos_d2__1 x = [((5009597 / 2**26 + x * (-3452481 / 2**36 + x * (10948483 / 2**24)) - cos (3/2 * cos x)) / cos (3/2 * cos x) + 57 / 2**10, 0)];;
let box_cos_cos_d2__2 x = [(-1, 1/2)];;
let obj_cos_cos_d2__2 x = [(- (5009597 / 2**26 + x * (-3452481 / 2**36 + x * (10948483 / 2**24)) - cos (3/2 * cos x)) / cos (3/2 * cos x) + 57 / 2**10, 0)];;

let box_cos_cos_d3__1 x = [(-1, 1/2)];;
let obj_cos_cos_d3__1 x = [((9578005 / 2**27 + x * (-8411879 / 2**29 + x * (6079307 / 2**23 + x * (14167647 / 2**27))) - cos (3/2 * cos x)) / cos (3/2 * cos x) + 51 / 2**11, 0)];;
let box_cos_cos_d3__2 x = [(-1, 1/2)];;
let obj_cos_cos_d3__2 x = [(- (9578005 / 2**27 + x * (-8411879 / 2**29 + x * (6079307 / 2**23 + x * (14167647 / 2**27))) - cos (3/2 * cos x)) / cos (3/2 * cos x) + 51 / 2**11, 0)];;

let box_cos_cos_d4__1 x = [(-1, 1/2)];;
let obj_cos_cos_d4__1 x = [((2366509 / 2**25 + x * (10537089 / 2**34 + x * (1593929 / 2**21 + x * (-3609977 / 2**29 + x * (-609875 / 2**22)))) - cos (3/2 * cos x)) / cos (3/2 * cos x) + 51 / 2**14, 0)];;
let box_cos_cos_d4__2 x = [(-1, 1/2)];;
let obj_cos_cos_d4__2 x = [(- (2366509 / 2**25 + x * (10537089 / 2**34 + x * (1593929 / 2**21 + x * (-3609977 / 2**29 + x * (-609875 / 2**22)))) - cos (3/2 * cos x)) / cos (3/2 * cos x) + 51 / 2**14, 0)];;

let box_cos_cos_d5__1 x = [(-1, 1/2)];;
let obj_cos_cos_d5__1 x = [((9491875 / 2**27 + x * (1388077 / 2**31 + x * (12575645 / 2**24 + x * (-3473267 / 2**28 + x * (-13477879 / 2**27 + x * (11406127 / 2**28))))) - cos (3/2 * cos x)) / cos (3/2 * cos x) + 3 / 2**12, 0)];;
let box_cos_cos_d5__2 x = [(-1, 1/2)];;
let obj_cos_cos_d5__2 x = [(- (9491875 / 2**27 + x * (1388077 / 2**31 + x * (12575645 / 2**24 + x * (-3473267 / 2**28 + x * (-13477879 / 2**27 + x * (11406127 / 2**28))))) - cos (3/2 * cos x)) / cos (3/2 * cos x) + 3 / 2**12, 0)];;

let box_cos_cos_d6__1 x = [(-1, 1/2)];;
let obj_cos_cos_d6__1 x = [((9492545 / 2**27 + x * (12716483 / 2**36 + x * (3142515 / 2**22 + x * (-8980587 / 2**31 + x * (-12736139 / 2**27 + x * (8061261 / 2**29 + x * (-13450525 / 2**29)))))) - cos (3/2 * cos x)) / cos (3/2 * cos x) + 17 / 2**16, 0)];;
let box_cos_cos_d6__2 x = [(-1, 1/2)];;
let obj_cos_cos_d6__2 x = [(- (9492545 / 2**27 + x * (12716483 / 2**36 + x * (3142515 / 2**22 + x * (-8980587 / 2**31 + x * (-12736139 / 2**27 + x * (8061261 / 2**29 + x * (-13450525 / 2**29)))))) - cos (3/2 * cos x)) / cos (3/2 * cos x) + 17 / 2**16, 0)];;

let box_cos_cos_d7__1 x = [(-1, 1/2)];;
let obj_cos_cos_d7__1 x = [((4747227 / 2**26 + x * (5795109 / 2**37 + x * (784233 / 2**20 + x * (-6099871 / 2**32 + x * (-10729417 / 2**27 + x * (12242037 / 2**30 + x * (-8892053 / 2**27 + x * (-14339757 / 2**29))))))) - cos (3/2 * cos x)) / cos (3/2 * cos x) + 25 / 2**19, 0)];;
let box_cos_cos_d7__2 x = [(-1, 1/2)];;
let obj_cos_cos_d7__2 x = [(- (4747227 / 2**26 + x * (5795109 / 2**37 + x * (784233 / 2**20 + x * (-6099871 / 2**32 + x * (-10729417 / 2**27 + x * (12242037 / 2**30 + x * (-8892053 / 2**27 + x * (-14339757 / 2**29))))))) - cos (3/2 * cos x)) / cos (3/2 * cos x) + 25 / 2**19, 0)];;

let box_cos_cos_d8__1 x = [(-1, 1/2)];;
let obj_cos_cos_d8__1 x = [((9494185 / 2**27 + x * (12149587 / 2**41 + x * (6275713 / 2**23 + x * (-14107149 / 2**36 + x * (-2763427 / 2**25 + x * (14503039 / 2**33 + x * (-530509 / 2**23 + x * (-8256955 / 2**31 + x * (3638503 / 2**28)))))))) - cos (3/2 * cos x)) / cos (3/2 * cos x) + 5 / 2**20, 0)];;
let box_cos_cos_d8__2 x = [(-1, 1/2)];;
let obj_cos_cos_d8__2 x = [(- (9494185 / 2**27 + x * (12149587 / 2**41 + x * (6275713 / 2**23 + x * (-14107149 / 2**36 + x * (-2763427 / 2**25 + x * (14503039 / 2**33 + x * (-530509 / 2**23 + x * (-8256955 / 2**31 + x * (3638503 / 2**28)))))))) - cos (3/2 * cos x)) / cos (3/2 * cos x) + 5 / 2**20, 0)];;

let box_MT2__1 x = [(-1 + 1/1024, 0)];;
let obj_MT2__1 x = [(log(1 + x) - log(1 + x) + 1/1024, 0)];;
let box_MT2__2 x = [(-1 + 1/1024, 0)];;
let obj_MT2__2 x = [(- log(1 + x) - log(1 + x) + 1/1024, 0)];;
let box_MT2__3 x = [(0, 1/1024)];;
let obj_MT2__3 x = [(log(1 + x) - log(1 - x) + 1/1024, 0)];;
let box_MT2__4 x = [(0, 1/1024)];;
let obj_MT2__4 x = [(- log(1 + x) - log(1 - x) + 1/1024, 0)];;

let box_MT4__1 x = [(-1 + 1/1024, 0)];;
let obj_MT4__1 x = [(log(1 + x) + (- x * (1 - x) / (1 + x) + 1/1024), 0)];;
let box_MT4__2 x = [(-1 + 1/1024, 0)];;
let obj_MT4__2 x = [(- log(1 + x) + (- x * (1 - x) / (1 + x) + 1/1024), 0)];;
let box_MT4__3 x = [(0, 1)];;
let obj_MT4__3 x = [(log(1 + x) + (x * (1 + x) / (1 + x) + 1/1024), 0)];;
let box_MT4__4 x = [(0, 1)];;
let obj_MT4__4 x = [(- log(1 + x) + (x * (1 + x) / (1 + x) + 1/1024), 0)];;

let box_MT10 x = [(0, 10)];;
let obj_MT10 x = [(- 2 * x / (2 + x) + log(1 + x) + 1/1024, 0)];;

let box_MT11 x = [(-1/3, 0)];;
let obj_MT11 x = [(- x / sqrt(1 + x) + log(1 + x) + 1/1024, 0)];;

let box_MT12 x = [(1/3, 10)];;
let obj_MT12 x = [(- log((1 + x)/x) + (12*x**2 + 12*x + 1) / (12*x**3 + 18*x**2 + 6*x), 0)];;

let box_MT13 x = [(1/3, 10)];;
let obj_MT13 x = [(- log((1 + x)/x) + 1/sqrt(x**2 + x), 0)];;

let box_MT16__1 x = [(-1, 0)];;
let obj_MT16__1 x = [(sin(x) + (6/5 * (- x) + 1/1024), 0)];;
let box_MT16__2 x = [(-1, 0)];;
let obj_MT16__2 x = [(- sin(x) + (6/5 * (- x) + 1/1024), 0)];;
let box_MT16__3 x = [(0, 1)];;
let obj_MT16__3 x = [(sin(x) + (6/5 * x + 1/1024), 0)];;
let box_MT16__4 x = [(0, 1)];;
let obj_MT16__4 x = [(- sin(x) + (6/5 * x + 1/1024), 0)];;

let box_MT17 x = [(1/1024, 100/201)];;
let obj_MT17 x = [(cos(pi * x) - 1 + 2 * x, 0)];;

let box_MT18 x = [(-10, 10)];;
let obj_MT18 x = [(cos(x) - 1 + x**2 / 2 + 1/1024, 0)];;

let box_MT19 x = [(0, 10)];;
let obj_MT19 x = [(1/1024 + atan(x) - (8 * sqrt(3) * x / (3 * sqrt(3) + sqrt(75 + 80*x**2))), 0)];;

let box_MT20 x = [(1/1024, 10)];;
let obj_MT20 x = [((x + 1/x) * atan(x) - 1, 0)];;

let box_MT21 x = [(0, 10)];;
let obj_MT21 x = [(1/1024 + atan(x) - 3 * x / (1 + 2 * sqrt(1 + x**2)), 0)];;

let box_MT22 x = [(1/1024, pi)];;
let obj_MT22 x = [(- cos(x) + (sin(x))/x, 0)];;

let box_MT23 x = [(1/1024, pi/2)];;
let obj_MT23 x = [(- cos(x) + (sin(x) / x)**2, 0)];;

let box_MT24 x = [(pi/3, 2*pi/3 - 1/1024)];;
let obj_MT24 x = [((sin(x))/3 + (sin(3*x))/6, 0)];;

let box_RD x1 x2 x3 = [(-5, 5); (-5, 5); (-5, 5)];;
let obj_RD x1 x2 x3 = [(36.7126907 - x1 + 2 * x2 - x3 - 0.835634534 * x2 * (1 + x2), 0)];;
let box_adaptiveLV x1 x2 x3 x4 = [(-2, 2); (-2, 2); (-2, 2); (-2, 2)];;
let obj_adaptiveLV x1 x2 x3 x4 = [(20.801 + x1 * x2**2 + x1 * x3**2 + x1 * x4**2 - 1.1 * x1 + 1, 0)];;
let box_butcher x1 x2 x3 x4 x5 x6 = [(-1, 0); (-0.1,0.9); (-0.1,0.5); (-1,-0.1); (-0.1,-0.05); (-0.1,-0.03)];;
let obj_butcher x1 x2 x3 x4 x5 x6 = [(1.44 + x6 * x2**2 + x5 * x3**2 - x1 * x4**2 + x4**3 + x4**2 - x1/3 + 4/3 * x4, 0)];;
let box_magnetism x1 x2 x3 x4 x5 x6 x7 = [(-1, 1); (-1, 1); (-1, 1); (-1, 1); (-1, 1); (-1, 1); (-1, 1)];;
let obj_magnetism x1 x2 x3 x4 x5 x6 x7 = [(0.25001 + x1**2 + 2 * x2**2 + 2 * x3**2 + 2 * x4**2 + 2 * x5**2 + 2 * x6**2 + 2 * x7**2 - x1, 0)];;
